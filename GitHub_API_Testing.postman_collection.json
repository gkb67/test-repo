{
	"info": {
		"_postman_id": "2093d76b-81c9-4915-9f94-5e9d7d052848",
		"name": "GitHub API Testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19373048"
	},
	"item": [
		{
			"name": "Positive tests",
			"item": [
				{
					"name": "Create repo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.test(\"Response has repository name\", function () {\r",
									"    pm.expect(jsonData).to.have.property('name', 'test-repo-2');\r",
									"});\r",
									"\r",
									"pm.environment.set(\"repoName\", jsonData.name);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "token {{authToken}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"test-repo-2\",\r\n    \"description\": \"This is a test repository\",\r\n    \"private\": false\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}user/repos",
							"host": [
								"{{url}}user"
							],
							"path": [
								"repos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Read repo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response is array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.an('array');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "token {{authToken}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{url}}user/repos",
							"host": [
								"{{url}}user"
							],
							"path": [
								"repos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update repo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response has updated description\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('description', 'This is an updated test repository');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "token {{authToken}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"test-repo-2\",\r\n    \"description\": \"This is an updated test repository\",\r\n    \"private\": false\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}repos/{{username}}/{{repoName}}",
							"host": [
								"{{url}}repos"
							],
							"path": [
								"{{username}}",
								"{{repoName}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete repo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "token {{authToken}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{url}}repos/{{username}}/{{repoName}}",
							"host": [
								"{{url}}repos"
							],
							"path": [
								"{{username}}",
								"{{repoName}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Negative tests",
			"item": [
				{
					"name": "Create repo with invalid data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "token {{authToken}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"\",\r\n    \"description\": \"This repository has an invalid name\",\r\n    \"private\": false\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}user/repos",
							"host": [
								"{{url}}user"
							],
							"path": [
								"repos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Read repo with invalid name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "token {{authToken}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{url}}repos/{{username}}/nonexistent-repo-name",
							"host": [
								"{{url}}repos"
							],
							"path": [
								"{{username}}",
								"nonexistent-repo-name"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"pm.request.headers.add({\r",
					"    key: 'Authorization',\r",
					"    value: `token ${pm.environment.get(\"authToken\")}`\r",
					"});"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}